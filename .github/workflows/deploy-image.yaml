---
name: Deploy BloopyBoi to GHCR

# Run workflow on tags starting with v (eg. v2, v1.2.0)
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      registry:
        type: string
        required: false
        default: ghcr.io
        description: 'Registry to use for container image'
      dockerfile_path:
        type: string
        required: false
        default: ./Dockerfile
        description: 'Path to Dockerfile if not root dir'
      imageName:
        type: string
        required: false
        default: ${{ github.repository }}
        description: 'Name that image should have'
  release:
    types:
      - published

env:
  registry: ghcr.io
  imageName: bloopyboi
  dockerfile_path: ./Dockerfile

jobs:
  compute-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.registry }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get old tag number
        id: get-tag
        run: |
          echo "::set-output name=last-tag::$(git describe --tags --abbrev=0)"


  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.registry }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          file: ${{ env.dockerfile_path }}
          push: true # Will only build (vs buildAndPush) if this is not here
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.imageName }}:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/${{ env.imageName }}:latest
